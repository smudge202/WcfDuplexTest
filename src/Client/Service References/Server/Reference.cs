//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Server {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.Subscriber", CallbackContract=typeof(Client.Server.SubscriberCallback))]
    public interface Subscriber {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subscriber/Subscribe", ReplyAction="http://tempuri.org/Subscriber/SubscribeResponse")]
        System.Guid Subscribe(string eventType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subscriber/Subscribe", ReplyAction="http://tempuri.org/Subscriber/SubscribeResponse")]
        System.Threading.Tasks.Task<System.Guid> SubscribeAsync(string eventType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Subscriber/Unsubscribe")]
        void Unsubscribe(System.Guid subsriptionId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Subscriber/Unsubscribe")]
        System.Threading.Tasks.Task UnsubscribeAsync(System.Guid subsriptionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SubscriberCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Subscriber/Dispatch")]
        void Dispatch(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SubscriberChannel : Client.Server.Subscriber, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriberClient : System.ServiceModel.DuplexClientBase<Client.Server.Subscriber>, Client.Server.Subscriber {
        
        public SubscriberClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriberClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriberClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Guid Subscribe(string eventType) {
            return base.Channel.Subscribe(eventType);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SubscribeAsync(string eventType) {
            return base.Channel.SubscribeAsync(eventType);
        }
        
        public void Unsubscribe(System.Guid subsriptionId) {
            base.Channel.Unsubscribe(subsriptionId);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(System.Guid subsriptionId) {
            return base.Channel.UnsubscribeAsync(subsriptionId);
        }
    }
}
